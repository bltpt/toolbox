#!/bin/bash

# projdone: Path --> <move the Path>
# Purpose: mark a project DONE and move it to the completed projects
#          directory


# Test whether input is an org file, project directory
# or something else.
if [ "$1" != "" ]
then
    path=`realpath $1`
    basename=`basename $path`

    # Test for a path to an org file
    if [ -f "$path" ]
    then
	if echo "$path" | egrep -qo ".*\.org$"
	then
	    echo "orgFile found: $path"
	    orgFile=$path
	    dirPath=`echo $path | sed "s/\/[^\/]+$//"`
	    echo "dirPath is $dirPath"
	    exit 0
	else
	    printf "Error:\n\n    Specified file is not an org-file.\n"
	    exit 1
	fi
    fi

    # Test for a project directory
    if [ -d "$path" ]
    then
	echo "directory found"
	basenameLower=`echo $basename | tr [:upper:] [:lower:]`".org"
	echo "the basenameLower is $basenameLower"
	if [ -f "$path/$basenameLower" ]
	then
	    echo "the input directory is a project directory"
	    exit 0
	else
	    printf "Error:\n\n    Specified directory is not a project directory.\n"
	    exit 1
	fi
    else
	printf "Error:\n\n    Specified input is neither a file nor a directory.\n"
	exit 1
    fi
    
else
    printf "Error:\n\n     No input specified.\n"
    exit 1
fi


# Read in the project file path
file=$1

# Determine the completed projects directory
completedProjects="$COMPLETEDPROJECTS"

# Read in the possible states
header=`head -n 1 $file`
states=`projstates "${header}"`

# Find the next steps line in the project org file
nextStepsLine=$(grep -En "^\* .+Next Steps" $file | tail -n 1 |  cut -f 1 -d ":")

# Capture the current state
state=$(grep "Next Steps" $file | tail -n 1 | egrep -o "${states}")
#state=`egrep -o "^ (.*) Next Steps" $file | tail -n 1`

# Change the current state line in the project org file to DONE
perl -pi -e 's/^\*.* Next Steps/\* DONE Next Steps/ if $. == '"${nextStepsLine}"';' $file

# Annotate with projdone having changed the state.
date=`date "+%Y-%m-%d %a %H:%M"`
logbookLine=$(expr $nextStepsLine + 2)
annotationLine=$(expr $logbookLine + 1)
perl -pi -e 'print "- State \"DONE\" from \"'"${state}"'\"    ['"${date}"']\n" if $. == '"${logbookLine}"';' $file
perl -pi -e 'print "  Closed via projdone.\n" if $. == '"${annotationLine}"';' $file
#printf "  - State \"DONE\" from \"${state}\"    [${date}]"
#printf '    Closed through projdone.'

# Move the project directory to the completed projects directory
#mv "$proj" "$completedProjects/"
