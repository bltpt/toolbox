#!/usr/bin/env python3

# explodecidr: list all the IP addresses in a CIDR block

import os
import sys
import netaddr # Importing the whole module so I can catch particular Exceptions

def processCidr(cidr):
    '''processCidr: String --> StdOut
    Purpose: find all IP addresses in String-represenation of a CIDR block
             and print to StdOut
    '''
    try:
        # remove newline character from line
        block=cidr.rstrip()

        # build an IPNetwork object from the cidr
        ips = netaddr.IPNetwork(cidr)

    except netaddr.core.AddrFormatError:
        print("Invalid CIDR block: %s" % block)
        sys.exit(1)
        
    for addr in ips:
        print(addr)


## Function calls

if __name__ == '__main__':
    if not os.isatty(0):
        try:
            inputLines = sys.stdin.readlines()
            for line in inputLines:
                processCidr(line)
        except Exception as e:
            print("Problem with handling input from pipe: %s" % line)
            pass
    else:
        try:
            cidr = sys.argv[1]
            processCidr(cidr)
        except Exception as e:
            print("Problem with handling input argument: %s" % cidr)
            pass
