#!/usr/bin/env python3

'''
deployexecs: [-d] [Str1] Str2 -> FilesOnDisc
Purpose: to copy executables from the current working directory to the
         directory at Str2. Optionally, copy executables from the
         directory at Str1 instead, and if the 'd' flag is specified,
         copy only those executables that differ from those already at
         Str2.
'''

import os
import sys
import argparse

cwd = os.getcwd() # current working directory

executables = []

try:
    dest = sys.argv[1]
except IndexError as e:
    print('Use: deployexecs path/to/destination/directory')
    sys.exit(0)

for item in os.walk(cwd):
    if item[0] == cwd:
        for file in item[2]:
            # various temp file tests...
            if '~' not in file:
                if '#' not in file:
                    if file[0] not in '.':
                        if os.access(file, os.X_OK): # is executable?
                            executables.append(file)

for file in executables:
    print("copying %s" % file)
    os.popen('cp %s %s' % (file, dest))

## New stuff

def hashFile(f):
    '''hashFile(): io.BufferedReader -> Str
    Purpose: read the io.BufferedReader and print its SHA256 hash.
    '''
    hashValue = hashlib.sha256(f)
    return hashValue.hexdigest()


if __name__ == '__main__':
    parser = argparse.ArgumentParser()

# For each file in target, get hash

# For each file being copied, get hash

# If the thing being copied doesn't exist in the target directory, copy
# it.

# If the thing being copied has the same hash as the file at the
# target, do nothing.

# If the thing being copies has a different hash than the file at the
# target, copy it and say as much.

# What to do if the executable already in the target directory isn't
# readable to the user running the problem?
